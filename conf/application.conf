# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret = "b]4y[mp`niu[i><trTJgfF2McPDXQ4_Nm;6Z?q=89=7vvvZbOn3`wcbX/E::81?T"

# The application languages
# ~~~~~
application.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global = configs.BGlobalSettings


# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

betty.jobs {

  filter {
    allowed-sports = ["VOLLEYBALL", "TENNIS", "TABLE_TENNIS", "BEACH_VOLLEYBALL", "BASEBALL", "BADMINTON"]
    allowed-types = ["REGULAR", "LIVE"]
  }

  remove-old-history {
    max-history-count = 5
    offset = 11 seconds
    delay = 10 seconds
  }

  remove-old-event {
    max-last-history-record-age = 5 seconds
    offset = 27 seconds
    delay = 10 seconds
  }

  notification {
    offset = 430 milliseconds
    delay = 1 seconds
  }

  enabled-event-jobs = ["live-kamaz", "live-ford"
    , "live-volvo-tennis", "live-volvo-beach-volleyball", "live-volvo-volleyball", "live-volvo-baseball", "live-volvo-table-tennis", "live-volvo-badminton"]

  regular-niva-tennis {
    offset = 43 seconds
    delay = 60 seconds
  }
  regular-niva-volleyball {
    offset = 9 seconds
    delay = 60 seconds
  }
  regular-niva-baseball {
    offset = 37 seconds
    delay = 60 seconds
  }

  regular-kamaz-tennis {
    offset = 29 seconds
    delay = 60 seconds
  }
  regular-kamaz-volleyball {
    offset = 59 seconds
    delay = 60 seconds
  }
  regular-kamaz-baseball {
    offset = 17 seconds
    delay = 60 seconds
  }

  live-kamaz {
    offset = 15 seconds
    delay = 1 seconds
  }

  live-ford {
    offset = 9 seconds
    delay = 1 seconds
  }

  live-volvo-tennis {
    offset = 5 seconds
    delay = 1 seconds
  }
  live-volvo-beach-volleyball {
    offset = 21 seconds
    delay = 1 seconds
  }
  live-volvo-volleyball {
    offset = 35 seconds
    delay = 1 seconds
  }
  live-volvo-baseball {
    offset = 7 seconds
    delay = 1 seconds
  }
  live-volvo-table-tennis {
    offset = 41 seconds
    delay = 1 seconds
  }
  live-volvo-badminton {
    offset = 53 seconds
    delay = 1 seconds
  }
  live-volvo-basketball {
    offset = 47 seconds
    delay = 1 seconds
  }

}

contexts {

  regular-niva-tennis {
    fork-join-executor {
      parallelism-max = 1
    }
  }
  regular-niva-volleyball {
    fork-join-executor {
      parallelism-max = 1
    }
  }
  regular-niva-baseball {
    fork-join-executor {
      parallelism-max = 1
    }
  }

  regular-kamaz-tennis {
    fork-join-executor {
      parallelism-max = 1
    }
  }
  regular-kamaz-volleyball {
    fork-join-executor {
      parallelism-max = 1
    }
  }
  regular-kamaz-baseball {
    fork-join-executor {
      parallelism-max = 1
    }
  }

  live-kamaz {
    fork-join-executor {
      parallelism-max = 1
    }
  }

  live-ford {
    fork-join-executor {
      parallelism-max = 1
    }
  }

  live-volvo-tennis {
    fork-join-executor {
      parallelism-max = 1
    }
  }
  live-volvo-volleyball {
    fork-join-executor {
      parallelism-max = 1
    }
  }
  live-volvo-beach-volleyball {
    fork-join-executor {
      parallelism-max = 1
    }
  }
  live-volvo-baseball {
    fork-join-executor {
      parallelism-max = 1
    }
  }
  live-volvo-table-tennis {
    fork-join-executor {
      parallelism-max = 1
    }
  }
  live-volvo-badminton {
    fork-join-executor {
      parallelism-max = 1
    }
  }
  live-volvo-basketball {
    fork-join-executor {
      parallelism-max = 1
    }
  }

  notification {
    fork-join-executor {
      parallelism-max = 1
    }
  }

}